version: '3.8'

services:
  database:
    build: 
      context: .
      dockerfile: ./MSSQL/Dockerfile
    restart: always
    container_name: database
    ports:
      - "1433:1433"  
    expose: 
      - 1433
    volumes: 
      - ./MSSQL/sqldata:/var/opt/mssql/data 
 
  appointmentapi:
    build: 
      context: .
      dockerfile: ./APIAppointment/Dockerfile 
    container_name: appointmentapi
    restart: on-failure
    depends_on:
      - hangfire
      - redis
      - database
      - mongodb
    ports:
      - "5000:80"
      - "5001:5001"

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379" 

  hangfire:
    build:
      context: .
      dockerfile: ./HangfireServer/Dockerfile
    container_name: hangfire
    restart: on-failure
    depends_on:
      - database
      - redis
      - rabbitmq

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "8080:15672"
      - "15672:15672"
      - "5672:5672"
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password 

  mongodb:
    image: mongo
    restart: always
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: HospitalB
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo_express
    depends_on:
      - mongodb
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin

  redistesting:
    build:
      context: .
      dockerfile: ./RedisTestingProject/Dockerfile
    container_name: redistesting
    restart: on-failure
    depends_on:
      - redis
      - mongodb

  

    